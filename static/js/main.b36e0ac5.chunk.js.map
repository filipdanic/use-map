{"version":3,"sources":["logo.png","../../dist/index.es.js","Intro.js","Demo.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","readme","path","object","Array","isArray","Error","searchPath","split","reduce","prev","cur","undefined","defineProperty","Symbol","iterator","obj","key","value","Object","enumerable","configurable","writable","_extends","assign","target","i","arguments","length","source","prototype","hasOwnProperty","call","index_es_slicedToArray","arr","_arr","_n","_d","_e","_s","_i","next","done","push","err","sliceIterator","TypeError","index_es","initialMap","_useState","react","_useState2","map","_set","replace","get","getIn","set","m","update","updateFn","remove","Intro","react_default","a","createElement","Fragment","src","logo","style","height","marginBottom","alt","Demo","_useMap","useMap","count","timestamp","Date","getTime","_useMap2","slicedToArray","_useMap2$","id","className","href","rel","onClick","Math","round","random","App","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b36e0ac5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.1f96998c.png\";","import { useState } from 'react';\n/**\n * @fileoverview\n * This package safely returns the value at a requested path inside of\n * an object. Best used on unpredictable deeply nested structures. Supports\n * arrays as well. See README.md for more info.\n *\n */\n\n/**\n * @param {Array.<string|number>|String} path â€“ e.g ['key1', 0, 'key2'] or a string such as 'key1.0.key2\n * @param {Object|Array} object\n * @returns {*}\n */\n\nvar getNestedValue = function getNestedValue(path, object) {\n  if (!Array.isArray(path) && typeof path !== 'string') {\n    throw Error('The package get-nested-value received a non-contract path. Please provide a string, number, or an array of those!');\n  }\n\n  var searchPath = path;\n\n  if (!Array.isArray(path)) {\n    searchPath = searchPath.split('.');\n  }\n\n  return searchPath.reduce(function (prev, cur) {\n    if (prev && prev[cur] !== undefined) {\n      return prev[cur];\n    }\n\n    return undefined;\n  }, object);\n};\n\nvar readme = getNestedValue;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar useMap = function useMap() {\n  var initialMap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (process.env.NODE_ENV !== 'production' && ((typeof initialMap === 'undefined' ? 'undefined' : _typeof(initialMap)) !== 'object' || Array.isArray(initialMap))) {\n    console.error('The useMap hook should be initialized with an object!');\n  }\n\n  var _useState = useState(initialMap),\n      _useState2 = slicedToArray(_useState, 2),\n      map = _useState2[0],\n      _set = _useState2[1];\n\n  return [map, {\n    replace: _set,\n    get: function get$$1(key) {\n      return map[key];\n    },\n    getIn: function getIn(path) {\n      return readme(path, map);\n    },\n    set: function set$$1(key, value) {\n      return _set(function (m) {\n        return _extends({}, m, defineProperty({}, key, value));\n      });\n    },\n    update: function update(key, updateFn) {\n      return _set(function (m) {\n        return _extends({}, m, defineProperty({}, key, updateFn(m[key])));\n      });\n    },\n    remove: function remove(key) {\n      return _set(function (m) {\n        delete m[key];\n        return m;\n      });\n    }\n  }];\n};\n\nexport default useMap;","import React from 'react';\nimport logo from './logo.png';\n\nexport default () =>\n  <React.Fragment>\n    <img src={logo} style={{ height: 96, marginBottom: 12 }} alt='' />\n    <img src='https://img.shields.io/npm/v/use-map.svg' alt='' />\n    <h1>use-map</h1>\n    <p>A custom React hook that lets you <mark>manipulate an object data structure</mark> without needing extra utilities.</p>\n    <p>Start with:</p>\n    <p><code>npm install --save use-map</code></p>\n  </React.Fragment>;\n","import React from 'react';\nimport useMap from 'use-map';\nimport Intro from './Intro';\n\nexport default () => {\n  const [ map, { get, set, update, getIn, remove, replace } ] = useMap({\n    count: 1,\n    timestamp: new Date().getTime(),\n  });\n  return (\n    <div id='demo'>\n      <div className='card'>\n        <Intro />\n        <h2>Docs and Examples</h2>\n        <p>The source code of this hook should be easy to digest as itâ€™s pretty short, so feel free <a href='https://github.com/filipdanic/use-map/blob/master/src/index.js' target='_blank' rel='noopener noreferrer'>check it out on GitHub.</a></p>\n        <h3>Initializing</h3>\n        <p>This page is a living doc and example, as you click on buttons youâ€™re changing the actual state of this page.</p>\n        <p>We start with <code>import useMap from 'use-map';</code> and then include the hook into our component:</p>\n        <pre>\n          {`const [ map, { get, set, update, getIn, remove, replace } ] = useMap({\\n`}\n          {`  count: 1,\\n`}\n          {`  timestamp: new Date().getTime(),\\n`}\n          {`});`}\n        </pre>\n        <p>Here, <mark>map is the state object</mark>, while <mark>get, set, update, getIn, and remove are all methods</mark> provided by this hook.</p>\n        <p>The argument given to useMap is the <mark>initial state.</mark> Leave it empty and it be assigned to an empty object.</p>\n        <h3>get</h3>\n        <p>As easy as <code>get('count')</code> or <code>get('timestamp')</code></p>\n        <pre>count: {get('count')}</pre>\n        <pre>timestamp: {get('timestamp')}</pre>\n        <h3>set</h3>\n        <p>As familiar as <code>set('timestamp', value)</code></p>\n        <button onClick={() => set('timestamp', new Date().getTime())}>Update Timestamp</button>\n        <h3>update</h3>\n        <p>But sometimes you need to first <code>get</code> the value and then decide on how to <code>set</code>. We can do all of that with <code>update</code> which accepts <mark>an update function</mark> as the second parameter. So, just like:</p>\n        <p><code>{`update('count', (count) => count + 1)`}</code></p>\n        <button onClick={() => update('count', (count) => count + 1)}>Increment by 1</button>\n        <button onClick={() => update('count', (count) => count - 1)}>Decrement by 1</button>\n        <pre>Current counter value: {get('count')}</pre>\n        <h3>getIn</h3>\n        <p>Sometimes you just have so much nested data to work with and youâ€™re in a pinch. This method will help you <mark>get deeply nested data</mark> out of your state <mark>without errors if the path doesnâ€™t exist.</mark></p>\n        <p>The <mark>path</mark> argument string or an array of strings and numbers:</p>\n        <p><code>getIn('some.path.to.someKey')</code></p>\n        <p><code>getIn(['some', 'path', 'to', 'someKey'])</code></p>\n        <p><code>getIn(['lookInside', 'anArray', 3, 'viaIndex'])</code></p>\n        <p>If the specified path doesnâ€™t exist, no error is thrown.</p>\n        <h3>remove</h3>\n        <p>With <code>remove('someKey')</code> you <mark>delete</mark> a key from the object state.</p>\n        <h3>replace</h3>\n        <p>This is your proxy to the <mark>set method from useState.</mark> Use it to replace the current state with whatever you need.</p>\n        <button onClick={() =>\n          replace({ count: Math.round(Math.random() * 1000), timestamp: new Date().getTime() })}\n        >\n          Randomize State!\n        </button>\n        <pre>count: {get('count')}</pre>\n        <pre>timestamp: {get('timestamp')}</pre>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Demo from './Demo';\n\nconst App = () =>\n  <div>\n    <Demo />\n  </div>;\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}